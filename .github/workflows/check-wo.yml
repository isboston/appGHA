name: Test notify333

on:
  schedule:
    - cron: "30 6 * * *"
  workflow_dispatch:

jobs:
  check-failed-workflows:
    runs-on: ubuntu-latest
    steps:
      - name: Notify failed runs
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          WORKFLOWS: |
            appGHA|ci-oci.yml
            appGHA|test2.yml
            appGHA|check-workflows.yml
            appGHA|check-work.yml
            appGHA2|test.yml
        run: |
          declare -A WORKFLOW_NAMES=(
            ["ci-oci.yml"]="Install OneClickInstall DocSpace"
            ["test2.yml"]="Upload offline self-extracting archive"
            ["check-workflows.yml"]="Workflows notify"
            ["check-work.yml"]="Workflow notify"
            ["test.yml"]="Upload on S3"
          )

          declare -A REPO_STATUS
          declare -A REPO_LIST

          while IFS='|' read -r REPO WORKFLOW; do
            [[ -z "$REPO" || -z "$WORKFLOW" ]] && continue
            FULL_REPO="isboston/$REPO"
            REPO_LIST["$REPO"]=1
            WORKFLOW_NAME="${WORKFLOW_NAMES[$WORKFLOW]:-$WORKFLOW}"
            WORKFLOW_URL="https://github.com/$FULL_REPO/actions/workflows/$WORKFLOW"

            RUNS_API_URL="https://api.github.com/repos/$FULL_REPO/actions/workflows/$WORKFLOW/runs?per_page=30"
            RUNS_RESPONSE="$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "$RUNS_API_URL")"

            [[ ! $(echo "$RUNS_RESPONSE" | jq -e .workflow_runs) ]] && continue

            RUNS=$(echo "$RUNS_RESPONSE" | jq --arg start "$(date -u -d '24 hours ago' +%Y-%m-%dT%H:%M:%SZ)" \
              '[.workflow_runs[]
                | select(.created_at >= $start)
                | select(.head_branch | test("^(main|release/.+|hotfix/.+|develop)$"))]')

            TOTAL_COUNT=$(echo "$RUNS" | jq 'length')
            FAIL_COUNT=$(echo "$RUNS" | jq '[.[] | select((.conclusion? // "failure") | test("failure|failed|error|startup_failure"))] | length')

            STATUS="\u26AA"
            (( TOTAL_COUNT > 0 )) && STATUS=$([[ $FAIL_COUNT -gt 0 ]] && echo "\uD83D\uDD34" || echo "\uD83D\uDFE2")

            REPO_STATUS["$REPO"]+="$STATUS [$WORKFLOW_NAME]($WORKFLOW_URL)\n"
          done <<< "$WORKFLOWS"

          for REPO in "${!REPO_LIST[@]}"; do
            [[ -n "${REPO_STATUS[$REPO]}" ]] && RESULT+="*$REPO*\n${REPO_STATUS[$REPO]}\n"
          done

          if [[ -n "$RESULT" ]]; then
              IFS=',' read -ra CHAT_IDS <<< "$TELEGRAM_CHAT_ID"
              for chat_id in "${CHAT_IDS[@]}"; do
                  curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
                    -H "Content-Type: application/json" -d "{\"chat_id\": ${chat_id}, \"text\": \"$RESULT\", \"parse_mode\": \"Markdown\", \"disable_web_page_preview\": true}"
              done
          fi

