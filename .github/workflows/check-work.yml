name: Workflow notify

on:
  schedule:
    - cron: "30 6 * * *"
  workflow_dispatch:

jobs:
  check-failed-workflows:
    runs-on: ubuntu-latest
    steps:
      - name: Notify failed runs
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          WORKFLOWS: |
            appGHA|ci-oci.yml
            appGHA|test2.yml
            appGHA|check-wo.yml
            appGHA|tg_notify.yml
            appGHA2|test.yml
        run: |
          declare -A STATUS_COUNT REPO_REPORTS
          while IFS='|' read -r REPO WORKFLOW; do
            [[ -z "$REPO" || -z "$WORKFLOW" ]] && continue
            API_URL="https://api.github.com/repos/isboston/$REPO/actions/workflows/$WORKFLOW/runs?per_page=30"
            RESPONSE="$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "$API_URL")"
            
            RUNS="$(echo "$RESPONSE" | jq --arg start "$(date -u -d '24 hours ago' +%Y-%m-%dT%H:%M:%SZ)" \
              '[.workflow_runs[] | select(.created_at >= $start and (.head_branch | test("^(main|release/.+|hotfix/.+|develop)$")))]')"

            FAILS="$(echo "$RUNS" | jq '[.[] | select((.conclusion // "failure") | test("failure|failed|error|startup_failure"))] | length')"
            SUCCS="$(echo "$RUNS" | jq '[.[] | select(.conclusion == "success")] | length')"

            [[ "$FAILS" -gt 0 ]] && STATUS="❌" || STATUS="✅"
            [[ "$FAILS" -eq 0 && "$SUCCS" -eq 0 ]] && continue

            DETAILS="$(echo "$RUNS" | jq -r '.[] | 
              "\u25FB [" + (.name | gsub("\\]"; "\\]"))[:29] + (if (.name | length) > 26 then "..." else "" end) + 
              "](" + .html_url + ") (" + .head_branch + ")"' | tr '\n' ';')"

            [[ -n "$DETAILS" ]] && REPO_REPORTS["$REPO"]+="$STATUS $WORKFLOW\n${DETAILS//;/\\n}\n"
            (( STATUS_COUNT["$REPO"] += FAILS > 0 ? FAILS : 0 ))
          done <<< "$WORKFLOWS"

          RESULT=""
          for REPO in "${!REPO_REPORTS[@]}"; do
            HEADER="🚀 REPO: $REPO"
            [[ "${STATUS_COUNT[$REPO]}" -gt 0 ]] && HEADER="❌ ${STATUS_COUNT[$REPO]} FAILED | 24h | $HEADER"
            RESULT+="$HEADER\n${REPO_REPORTS[$REPO]}\n"
          done

          [[ -z "$RESULT" ]] && exit 0
          
          curl -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            -H "Content-Type: application/json" \
            -d "{\"chat_id\": \"${TELEGRAM_CHAT_ID}\", \"text\": \"${RESULT//\"/\\\"}\", \"parse_mode\": \"Markdown\", \"disable_web_page_preview\": true}"

