name: Workflow notify

on:
  schedule:
    - cron: "30 6 * * *"
  workflow_dispatch:

jobs:
  check-failed-workflows:
    runs-on: ubuntu-latest
    steps:
      - name: Notify failed runs
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          WORKFLOWS: |
            appGHA|ci-oci.yml
            appGHA|test2.yml
            appGHA|check-wo.yml
            appGHA|tg-notify.yml
            appGHA2|test.yml
        run: |
          declare -A REPO_STATUS
          declare -A REPO_COUNT

          while IFS='|' read -r REPO WORKFLOW; do
            [[ -z "$REPO" || -z "$WORKFLOW" ]] && continue

            FULL_REPO="isboston/$REPO"
            API_URL="https://api.github.com/repos/$FULL_REPO/actions/workflows/$WORKFLOW/runs?per_page=30"
            RESPONSE="$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "$API_URL")"

            if echo "$RESPONSE" | jq -e .workflow_runs >/dev/null 2>&1; then
              RUNS="$(echo "$RESPONSE" | jq --arg start "$(date -u -d '24 hours ago' +%Y-%m-%dT%H:%M:%SZ)" \
                '[.workflow_runs[]
                  | select(.created_at >= $start)
                  | select(.head_branch | test("^(main|release/.+|hotfix/.+|develop)$"))]')"
            else
              echo "Error API: $FULL_REPO/$WORKFLOW"
              continue
            fi

            FAIL_RUNS="$(echo "$RUNS" | jq -r '[.[] | select((.conclusion? // "failure") | test("failure|failed|error|startup_failure"))] | .[].name')"
            SUCCESS_RUNS="$(echo "$RUNS" | jq -r '[.[] | select(.conclusion == "success")] | .[].name')"

            while IFS= read -r ACTION_NAME; do
              [[ -z "$ACTION_NAME" ]] && continue
              REPO_STATUS["$REPO"]+="❌ $ACTION_NAME\n"
              (( REPO_COUNT["$REPO"]++ ))
            done <<< "$FAIL_RUNS"

            while IFS= read -r ACTION_NAME; do
              [[ -z "$ACTION_NAME" ]] && continue
              REPO_STATUS["$REPO"]+="✅ $ACTION_NAME\n"
            done <<< "$SUCCESS_RUNS"
          done <<< "$WORKFLOWS"

          RESULT=""
          for REPO in "${!REPO_STATUS[@]}"; do
            HEADER="__${REPO}__"
            COUNT="${REPO_COUNT[$REPO]}"
            if [[ "$COUNT" -gt 0 ]]; then
              HEADER="❌ $COUNT FAILED | 24h | $HEADER"
            fi
            RESULT+="$HEADER\n${REPO_STATUS[$REPO]}\n"
          done

          if [[ -n "$RESULT" ]]; then
            curl -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
              -H "Content-Type: application/json" \
              -d "{\"chat_id\": \"${TELEGRAM_CHAT_ID}\", \"text\": \"$RESULT\", \"parse_mode\": \"Markdown\", \"disable_web_page_preview\": true}"
          fi

