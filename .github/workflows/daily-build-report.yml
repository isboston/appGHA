name: Daily Build Report

on:
  schedule:
    - cron: "*/10 * * * *"  # –ó–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç (–¥–ª—è —Ç–µ—Å—Ç–∞)
  workflow_dispatch:  # –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Ä—É—á–Ω—É—é

jobs:
  check-build-results:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: üîç –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –í–°–ï–• –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ —á–µ—Ä–µ–∑ API
        run: |
          echo "üîç –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞..."
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts" | jq -r '.artifacts[].name' > artifacts_list.txt

          echo "üìÇ –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã:"
          cat artifacts_list.txt || echo "‚ùå –ù–µ—Ç –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤!"

      - name: ‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞–µ–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø–∞–ø–∫–∏
        run: |
          mkdir -p artifacts
          touch downloaded_artifacts.txt
          
          while read ARTIFACT_NAME; do
            if [ -n "$ARTIFACT_NAME" ] && ! grep -Fxq "$ARTIFACT_NAME" downloaded_artifacts.txt; then
              echo "$ARTIFACT_NAME" >> downloaded_artifacts.txt
              echo "‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞–µ–º $ARTIFACT_NAME –≤ artifacts/$ARTIFACT_NAME..."
              gh run download --repo ${{ github.repository }} -n "$ARTIFACT_NAME" -D "artifacts/$ARTIFACT_NAME"
            fi
          done < artifacts_list.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: üîé –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫–∞—á–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        run: |
          ls -lah artifacts || echo "‚ùå –ù–µ—Ç —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤!"
          find artifacts -type f || echo "‚ùå –ù–µ—Ç —Ñ–∞–π–ª–æ–≤!"

      - name: üìÇ –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ build_results –≤ –æ–¥–∏–Ω —Ñ–∞–π–ª
        run: |
          echo "[]" > merged_results.json
          find artifacts -name "build_results.json" | while read file; do
            if [ -f "$file" ]; then
              jq -s 'add' merged_results.json "$file" > tmp.json && mv tmp.json merged_results.json
            fi
          done

          echo "üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ merged_results.json:"
          cat merged_results.json

      - name: üì¢ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–±–æ—Ä–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          if [ ! -s merged_results.json ]; then
            echo "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Å–±–æ—Ä–∫–∞—Ö. –í—ã—Ö–æ–¥."
            exit 0
          fi

          FAILURES=$(jq '[.[] | select(.status=="failure")] | length' merged_results.json)
          TOTAL=$(jq 'length' merged_results.json)

          MESSAGE="üìÖ *–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç –æ —Å–±–æ—Ä–∫–∞—Ö*\n"
          MESSAGE+="üìä –í—Å–µ–≥–æ —Å–±–æ—Ä–æ–∫: *$TOTAL*\n"
          if [ "$FAILURES" -eq 0 ]; then
            MESSAGE+="‚úÖ *–í—Å–µ —Å–±–æ—Ä–∫–∏ —É—Å–ø–µ—à–Ω—ã!* üéâ\n"
          else
            MESSAGE+="‚ùå *–ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–±–æ—Ä–∫–∏: $FAILURES*\n"
          fi
          MESSAGE+="üîó [–ü–µ—Ä–µ–π—Ç–∏ –∫ Actions](https://github.com/${{ github.repository }}/actions)\n"

          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -H "Content-Type: application/json" \
            -d "{\"chat_id\": \"${{ secrets.TELEGRAM_CHAT_ID }}\", \"text\": \"$MESSAGE\", \"parse_mode\": \"Markdown\"}"


