name: Hourly Build Report

on:
  schedule:
    - cron: "0 * * * *"  # –†–∞–∑ –≤ —á–∞—Å
  workflow_dispatch:

jobs:
  check-build-results:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: üîç –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø—É—Å–∫–∞—Ö
        run: |
          echo "üîç –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø—É—Å–∫–∏ workflow..."
          CURRENT_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          ONE_HOUR_AGO=$(date -u -d "1 hour ago" +"%Y-%m-%dT%H:%M:%SZ")

          # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø—É—Å–∫–æ–≤
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs?per_page=50" | \
            jq --arg since "$ONE_HOUR_AGO" --arg now "$CURRENT_TIME" \
            '[.workflow_runs[] | select(.created_at >= $since and .created_at <= $now)]' > workflow_runs.json

          echo "üìÑ –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ workflow_runs:"
          cat workflow_runs.json

          # –§–æ—Ä–º–∏—Ä—É–µ–º JSON —Å –Ω—É–∂–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
          jq '[.[] | {name: .name, branch: .head_branch, html_url: .html_url, status: (.conclusion // "failure"), triggered_by: (.triggering_actor.login // "unknown")}]' workflow_runs.json > merged_results.json

          echo "üìÑ –ò—Ç–æ–≥–æ–≤—ã–π merged_results.json:"
          cat merged_results.json

            - name: üì¢ **–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –≤ Telegram**
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          if [ ! -s merged_results.json ] || [ "$(jq 'length' merged_results.json)" -eq 0 ]; then
            echo "‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Å–±–æ—Ä–∫–∞—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å. –í—ã—Ö–æ–¥."
            exit 0
          fi

          echo "üìÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º merged_results.json:"
          cat merged_results.json

          # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ—É–¥–∞—á–Ω—ã–µ —Å–±–æ—Ä–∫–∏
          FAILURES=$(jq '[.[] | select(.status=="failure" or .status=="failed" or .status=="error")]' merged_results.json)
          FAIL_COUNT=$(echo "$FAILURES" | jq 'length')
          TOTAL=$(jq 'length' merged_results.json)

          echo "üîç –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å–±–æ—Ä–æ–∫: $FAIL_COUNT"

          MESSAGE="üïí *–û—Ç—á–µ—Ç –æ —Å–±–æ—Ä–∫–∞—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å*\n"
          MESSAGE+="üìä –í—Å–µ–≥–æ —Å–±–æ—Ä–æ–∫: *$TOTAL*\n"

          if [ "$FAIL_COUNT" -eq 0 ]; then
            MESSAGE+="‚úÖ *–í—Å–µ —Å–±–æ—Ä–∫–∏ —É—Å–ø–µ—à–Ω—ã!* üéâ\n"
          else
            MESSAGE+="‚ùå *–ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–±–æ—Ä–∫–∏: $FAIL_COUNT*\n"

            FAIL_LIST=""
            echo "üîç –°–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–∞–ª–µ–Ω–Ω—ã—Ö —Å–±–æ—Ä–æ–∫:"
            echo "$FAILURES" | jq '.[]'

            echo "$FAILURES" | jq -r '.[] | @base64' | while IFS= read -r line; do
              JSON=$(echo "$line" | base64 --decode)
              NAME=$(echo "$JSON" | jq -r '.name // "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π workflow"')
              BRANCH=$(echo "$JSON" | jq -r '.branch // "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –≤–µ—Ç–∫–∞"')
              URL=$(echo "$JSON" | jq -r '.html_url // "–ù–µ—Ç —Å—Å—ã–ª–∫–∏"')
              TRIGGERED_BY=$(echo "$JSON" | jq -r '.triggered_by // "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"')

              # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã Markdown
              NAME=$(echo "$NAME" | sed 's/_/\\_/g')
              BRANCH=$(echo "$BRANCH" | sed 's/_/\\_/g')
              TRIGGERED_BY=$(echo "$TRIGGERED_BY" | sed 's/_/\\_/g')

              FAIL_LIST+="üîπ *${NAME}*\n"
              FAIL_LIST+="  ‚îú üìå –í–µ—Ç–∫–∞: *${BRANCH}*\n"
              FAIL_LIST+="  ‚îú üë§ –ó–∞–ø—É—Å—Ç–∏–ª: *${TRIGGERED_BY}*\n"
              FAIL_LIST+="  ‚îú üîó [–õ–æ–≥](${URL})\n\n"
            done

            echo "üìÑ –ò—Ç–æ–≥–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –æ—à–∏–±–æ–∫:"
            echo "$FAIL_LIST"

            if [ -z "$FAIL_LIST" ]; then
              echo "‚ùå –û—à–∏–±–∫–∞: —Å–ø–∏—Å–æ–∫ –æ—à–∏–±–æ–∫ –ø—É—Å—Ç, –Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å $FAIL_COUNT –æ—à–∏–±–æ–∫!"
              exit 1
            fi

            MESSAGE+="$FAIL_LIST"
          fi

          # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -H "Content-Type: application/json" \
            -d "{\"chat_id\": \"${{ secrets.TELEGRAM_CHAT_ID }}\", \"text\": \"$MESSAGE\", \"parse_mode\": \"Markdown\", \"disable_web_page_preview\": true}"



